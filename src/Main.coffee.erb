#= require Splash
#= require Landscape

LaggyDash = window.LaggyDash

Splash = LaggyDash.Splash
Landscape = LaggyDash.Landscape

class Main extends Phaser.State
  constructor:(@parent='')->

  run:(debug = false)->
    mode = if debug then Phaser.CANVAS else Phaser.AUTO
    new Phaser.Game(896, 504, mode, @parent, this)

  destroy:->
    destroy(@text)
    destroy(@graphics)

  preload:->  
    @game.stage.disableVisibilityChange=true

    @game.stage.scale.pageAlignHorizontally = true
    @game.stage.scale.pageAlignVertically = false
    @game.stage.scale.setShowAll()
    @game.stage.scale.refresh()

    @game.stage.scale.enterLandscape.add =>
      @game.stage.scale.setShowAll()
      @game.stage.scale.refresh()

    @game.stage.scale.enterPortrait.add =>
      @game.stage.scale.setShowAll()
      @game.stage.scale.refresh()

    @setPlayerName(location.search)

    @game.physics.gravity.y = 400

    message = "=== L A G G Y D A S H ===\nis\nLOADING"
    style =
      font: "30px Courier"
      fill: "#00ff44"
      align: "center"
    @text = @game.add.text(@game.world.centerX, @game.world.centerY, message, style)
    @text.anchor.setTo(0.5, 0.5)
    @graphics = @game.add.graphics(0, 0)

    @graphics.lineStyle(1, 0x5588cc, 1)
    @graphics.drawRect(199, 339, 502, 22)

    @game.load.onLoadComplete.addOnce(@ready)
    @game.state.add('splash', new Splash(), false)
    @game.state.add('landscape', new Landscape(), false)
    @game.load.image('labs', 'images/labs.png')
    @game.load.image('night', 'images/night_sky.png')
    @game.load.image('stars', 'images/night_stars.png')
    @game.load.image('sky', 'images/sky.jpg')
    @game.load.image('sun', 'images/sun.png')
    @game.load.image('cloud', 'images/cloud.png')
    @game.load.image('mountain0', 'images/mountain0.png')
    @game.load.image('mountain1', 'images/mountain1.png')
    @game.load.image('mountain2', 'images/mountain2.png')
    @game.load.image('mountain3', 'images/mountain3.png')
    @game.load.image('grass', 'images/grass.png')
    @game.load.image('tree0', 'images/tree0.png')
    @game.load.image('tree1', 'images/tree1.png')
    @game.load.image('tree2', 'images/tree2.png')
    @game.load.image('tree3', 'images/tree3.png')
    @game.load.image('dot', 'images/dot.png')
    @game.load.spritesheet('runner', 'images/running.png', 44, 64, 6)
    @game.load.spritesheet('wolf', 'images/wolf.png', 64, 32, 6)
    @game.load.spritesheet('coin', 'images/coin.png', 16, 18, 6)
    @game.load.spritesheet('bomb', 'images/bomb.png', 18, 18, 6)
    @game.load.spritesheet('explosion', 'images/explosion.png', 32, 32, 4)

  loadRender:->
    @graphics.beginFill(0x00ff44)
    @graphics.drawRect(200, 340, 5 * @game.load.progress, 20)
    @graphics.endFill()

  render:->
    @graphics.clear()
    @loadRender() unless @game.load.hasLoaded

  ready:=>
    @game.load.onFileComplete.add (progress, key) => @onAvatarLoaded(key)
    @text.alpha = 0.0
    if @game.player_name?
      @startGame()
    else
      message = "Your Twitter Handle (so we can show you in the game)"
      options =
        labels:
          ok: "Play"
          cancel: "Surprise Me"
      alertify.set(options)
      alertify.prompt message, (event, input) =>
        @setPlayerName(input) if event
        @randomPlayerName() unless @game.player_name?
        @startGame()

  setPlayerName:(name)->
    return unless name?
    @game.player_name = name.replace(/[^a-z0-9_]/i, '').toLowerCase()
    if @game.player_name.length < 1 || @game.player_name.length > 15
      @game.player_name = null

  randomPlayerName:->
    famous_people = [
      "BarackObama", "Eminem", "BillGates", "ParisHilton", "ConanOBrien",
      "tomhanks", "TheRock", "stephenfry", "MichelleObama"
    ]
    name = @game.rnd.pick(famous_people)
    @setPlayerName(name)

  startGame:=>
    @connect('laggydash', laggydash.game.rnd.uuid() + ":#{@game.player_name}")
    @game.state.start('splash')

  connect:(@channel, @user)->
    @pubnub = PUBNUB.init
      publish_key: "pub-c-e5d7da60-f65b-4173-b353-2b06890cfe5b"
      subscribe_key: "sub-c-4cf670be-96d5-11e3-b9e1-02ee2ddab7fe"
      uuid: @user

    @pubnub.subscribe
      channel: channel,
      message: @_message
      presence: @_presence

  disconnect:(@channel)->
    @pubnub.unsubscribe
      channel: channel,

  send:(message)->
    @pubnub.publish
      channel: @channel
      message:
        uuid: @user
        data: message

  loadAvatar:(name)->
    key = "@#{name}"
    if @game.cache.checkImageKey(key) || @game.load.checkKeyExists('image', key)
      return
    else
      @game.load.image(key, "http://res.cloudinary.com/kranzky/image/twitter_name/#{name}.jpg")
      @game.load.start() unless @game.load.isLoading

  onAvatarLoaded:(key)->
    return unless laggydash.game.state.current == 'landscape'
    @game.state.getCurrentState().avatarLoaded(key)

  showUser:(name)->
    @openWindow("https://twitter.com/intent/user?screen_name=#{name}")

  tweet:(message, follow)->
    url = encodeURI("http://laggydash.com/")
    message = encodeURI(message)
    related = encodeURI(follow.toString())
    @openWindow("https://twitter.com/intent/tweet?text=#{message}&hashtags=laggydash&url=#{url}&related=#{related}&")

  openWindow:(url)->
    windowOptions = "scrollbars=yes,resizable=yes,toolbar=no,location=yes"
    width = 550
    height = 420
    left = Math.round((screen.width / 2) - (width / 2))
    top = 0;        
    if screen.height > height
      top = Math.round((screen.height / 2) - (height / 2))
    window.open(url, 'intent', "#{windowOptions},width=#{width},height=#{height},left=#{left},top=#{top}")

  _presence:(event)=>
    uuid = event.uuid.replace(/:.*$/i, '')
    name = event.uuid.replace(/^.*:/i, '')
    unless event.uuid == @user
      switch event.action
        when "join"
          @_handle({ id: uuid, action: 'join', name: name })
#         alertify.success "@#{name} has joined"
        when "leave"
          @_handle({ id: uuid, action: 'bail', name: name })
#         alertify.error "@#{name} has bailed"
    return unless event.action = "join"
    @loadAvatar(name)

  _message:(event)=>
    return if event.uuid == @user
    uuid = event.uuid.replace(/:.*$/i, '')
    name = event.uuid.replace(/^.*:/i, '')
    event.data.id = uuid
    event.data.name = name
    @_handle(event.data)

  _handle:(data)->
    return unless laggydash.game.state.current == 'landscape'
    @game.state.getCurrentState().handle(data)

LaggyDash.Main = Main
