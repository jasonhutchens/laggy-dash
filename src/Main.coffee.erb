#= require Splash
#= require Landscape

LaggyDash = window.LaggyDash

Splash = LaggyDash.Splash
Landscape = LaggyDash.Landscape

class Main extends Phaser.State
  constructor:(@parent='')->

  run:(debug = false)->
    mode = if debug then Phaser.CANVAS else Phaser.AUTO
    new Phaser.Game(896, 504, mode, @parent, this)

  destroy:->
    destroy(@text)
    destroy(@graphics)

  preload:->  
    @game.stage.disableVisibilityChange=true

    @game.stage.scale.pageAlignHorizontally = true
    @game.stage.scale.pageAlignVertically = false
    @game.stage.scale.setShowAll()
    @game.stage.scale.refresh()

    @game.stage.scale.enterLandscape.add =>
      @game.stage.scale.setShowAll()
      @game.stage.scale.refresh()

    @game.stage.scale.enterPortrait.add =>
      @game.stage.scale.setShowAll()
      @game.stage.scale.refresh()

    message = "=== L A G G Y D A S H ===\nis\nLOADING"
    style =
      font: "30px Courier"
      fill: "#00ff44"
      align: "center"
    @text = @game.add.text(@game.world.centerX, @game.world.centerY, message, style)
    @text.anchor.setTo(0.5, 0.5)
    @graphics = @game.add.graphics(0, 0)

    @graphics.lineStyle(1, 0x5588cc, 1)
    @graphics.drawRect(199, 339, 502, 22)

    @game.load.onLoadComplete.addOnce(@ready)
    @game.state.add('splash', new Splash(), false)
    @game.state.add('landscape', new Landscape(), false)
    @game.load.image('labs', '<%= asset('labs.png') %>')
    @game.load.image('night', '<%= asset('night_sky.png') %>')
    @game.load.image('stars', '<%= asset('night_stars.png') %>')
    @game.load.image('sky', '<%= asset('sky.jpg') %>')
    @game.load.image('sun', '<%= asset('sun.png') %>')
    @game.load.image('cloud', '<%= asset('cloud.png') %>')
    @game.load.image('mountain0', '<%= asset('mountain0.png') %>')
    @game.load.image('mountain1', '<%= asset('mountain1.png') %>')
    @game.load.image('mountain2', '<%= asset('mountain2.png') %>')
    @game.load.image('mountain3', '<%= asset('mountain3.png') %>')
    @game.load.image('grass', '<%= asset('grass.png') %>')
    @game.load.image('tree0', '<%= asset('tree0.png') %>')
    @game.load.image('tree1', '<%= asset('tree1.png') %>')
    @game.load.image('tree2', '<%= asset('tree2.png') %>')
    @game.load.image('tree3', '<%= asset('tree3.png') %>')
    @game.load.image('foo', 'http://res.cloudinary.com/kranzky/image/twitter_name/barnaby_joyce.jpg')
    @game.load.spritesheet('guy', '<%= asset('running.png') %>', 90, 128, 6)

  loadRender:->
    @graphics.beginFill(0x00ff44)
    @graphics.drawRect(200, 340, 5 * @game.load.progress, 20)
    @graphics.endFill()

  render:->
    @loadRender()

  ready:=>
    @game.state.start('splash')
    @connect('laggydash', laggydash.game.rnd.uuid())

  connect:(@channel, @user)->
    @pubnub = PUBNUB.init
      publish_key: "pub-c-e5d7da60-f65b-4173-b353-2b06890cfe5b"
      subscribe_key: "sub-c-4cf670be-96d5-11e3-b9e1-02ee2ddab7fe"
      uuid: @user

    @pubnub.subscribe
      channel: channel,
      message: @_message
      presence: @_presence

    @sync()

  send:(message)->
    @pubnub.publish
      channel: @channel
      message: { uuid: @user, time: @worldTime(), data: message }

  worldTime:->
    Date.now() - @latency

  sync:->
    @pubnub.time(@_time)

  here:->
    @pubnub.here_now
      channel: @channel
      callback: @_here

  _presence:(event)=>
    console.log(event)

  _message:(event)=>
    return if event.uuid == @user
    return unless laggydash.game.state.current == 'landscape'
    @game.state.getCurrentState().movChaser(event.uuid, event.time, event.data)

  _time:(event)=>
    @latency = Date.now() - event / 10000

  _here:(event)=>
    console.log(event)

LaggyDash.Main = Main
